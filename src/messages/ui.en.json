{
  "about.developedInPartnership": "Developed in partnership with Center for Computational Thinking and Design, Aarhus University",
  "about.softwareVersions": "Software versions",
  "about.microbitHeartImageAlt": "micro:bit board with the 5 by 5 LED grid showing a heart",

  "actions.close": "Close",

  "alert.data.classNameLengthAlert": "Names must consists of maximum {maxLen} characters.",
  "alert.recording.disconnectedDuringRecording": "micro:bit disconnected during recording",

  "alert.isRecording": "You are currently recording!",
  "alert.isTesting": "You are currently recording!",
  "alert.isTraining": "You are currently training a model!",
  "alert.isNotConnected": "Your Micro:bit should be connected!",
  "alert.deleteGestureConfirm": "Are you sure you want to delete the class ",

  "alert.twoGestures": "You need at least two classes",
  "alert.oneDataRepresentation": "You need at least one data representation",
  "alert.recordingsPerGesture": "You need at least three examples per class",

  "content.index.title": "machine learning tool",
  "content.index.toolInfo1": "Use this tool with the",
  "content.index.toolInfo2": "BBC micro:bit playground survey",
  "content.index.toolProcessCards.main.title": "How this tool works",
  "content.index.toolProcessCards.data.title": "Add data",
  "content.index.toolProcessCards.data.description": "Add samples of the actions you would like your model to recognise (e.g. waving and clapping).",
  "content.index.toolProcessCards.train.title": "Train model",
  "content.index.toolProcessCards.train.description": "Ask the computer to use your training samples to train the machine learning model to recognise different actions.",
  "content.index.toolProcessCards.model.title": "Test model",
  "content.index.toolProcessCards.model.description": "Find out if it correctly recognises each action. Add more data to improve the model.",
  "content.index.recordButtonDescription": "\"Record\"-button",

  "content.data.classPlaceholderNewClass": "Name of action",
  "content.data.addData": "Add Data",
  "content.data.classHelpHeader": "Class",
  "content.data.classHelpBody": "A class describes a type of gesture. We can record examples of a certain type of gesture and put the examples in the same class. The trainer can find patterns in the examples/data and use these patterns to 'train' a model that can recognize this class of gestures. Multiple examples will typically result in a better model, and consider how many different ways a gesture can be performed.",
  "content.data.classification": "Action",
  "content.data.data": "Data samples",
  "content.data.choice": "Choice",
  "content.data.choice.header": "Choice of class",
  "content.data.choice.body": "Here, you choose which class you want to add data to. After having selected a class, you can either press the \"Record\" button below or press one of the buttons on your micro:bit to record a data segment. See the picture below.",
  "content.data.dataDescription": "Here you can see the gathered data. ",
  "content.data.noData": "You do not have any gestures to train on. Add the gestures you wish the micro:bit should learn to recognise.",

  "content.data.controlbar.button.menu": "Data actions",
  "content.data.controlbar.button.clearData": "Clear examples",
  "content.data.controlbar.button.clearData.confirm": "Are you sure you wish to delete all gesture examples?\nThis cannot be undone.",
  "content.data.controlbar.button.downloadData": "Download dataset",
  "content.data.controlbar.button.uploadData": "Upload dataset",

  "content.data.recording.button.cancel": "Cancel recording",
  "content.data.recording.description": "Start action before the countdown finishes",

  "content.data.trainDialog.title": "Train the model",
  "content.data.trainDialog.text": "Do you want to train the model with the data you have added so you can test it?",

  "content.trainer.header": "Training a model",
  "content.trainer.description": "The computer program spots patterns or differences in your data samples, and uses these to build a mathematical model that allows the micro:bit machine learning tool to recognise different actions when you move your micro:bit.",

  "content.trainer.enoughdata.title": "Status: You've collected enough data to train the model.",

  "content.trainer.training.title": "Status: training the model in progress.",

  "content.trainer.failure.header": "Training Failed",
  "content.trainer.failure.body": "The training did not result in a usable model. The reason for this is most likely the data used for training. If the data for different classes are too similar, this can result in issues in the training process.",
  "content.trainer.failure.todo": "Return to the data page and change your data.",

  "content.filters.NoDataHeader": "No available data",
  "content.filters.NoDataBody": "Go to the Data page to collect data samples.",
  "content.filters.max.title": "Max values",
  "content.filters.max.description": "The maximum point among all datapoints in a gesture.",
  "content.filters.min.title": "Minimum values",
  "content.filters.min.description": "The minimum point among all datapoints in a gesture.",
  "content.filters.std.title": "Standard deviation",
  "content.filters.std.description": "The average deviation from 0 among all datapoints in a gesture.",
  "content.filters.peaks.title": "Number of extremes",
  "content.filters.peaks.description": "The number of extremes among all datapoints in a gesture.",
  "content.filters.acc.title": "Total acceleration",
  "content.filters.acc.description": "The sum of acceleration for the whole gesture, calculated in absolute values. Good for understanding the amount of movement.",
  "content.filters.mean.title": "Mean",
  "content.filters.mean.description": "Mean value of accelerations",
  "content.filters.zcr.title": "Zero crossing rate",
  "content.filters.zcr.description": "The rate at which the input (acceleration) transitions between positive and negative.",
  "content.filters.rms.title": "Root mean square",
  "content.filters.rms.description": "",

  "content.model.trainModelFirstHeading": "Test model",
  "content.model.trainModelBody1": "You cannot test the model until it has been trained.",
  "content.model.trainModelBody2": "You need at least 3 data samples for 2 actions to train a model.",
  "content.model.classification.helpHeading": "Probabil-ometer",
  "content.model.classification.helpBody": "For each prediction you make, the model will produce a percentage that describes how confident the model is in its prediction. This meter goes from 0% to 100%. With the slider next to it, you can determine the limit of how certain the model should be in its preduction to make an output (e.g. play a sound)",
  "content.model.output.soundOptionCongratulations": "Congratulations",
  "content.model.output.soundOptionHighPitchBeep": "High pitch beep",
  "content.model.output.soundOptionLowPitchBeep": "Low pitch beep",
  "content.model.output.soundOptionLoser": "Loser",
  "content.model.output.soundOptionMistake": "Mistake",
  "content.model.output.soundOptionHugeMistake": "Huge Mistake",

  "content.model.output.pin.option.allTime": "Always on",
  "content.model.output.pin.option.xTime": "For time",
  "content.model.output.pin.seconds": "Seconds",

  "content.model.output.estimatedGesture.iconTitle": "Estimated action:",
  "content.model.output.estimatedGesture.descriptionTitle": "Estimated action",
  "content.model.output.estimatedGesture.descriptionBody": "This is the action the model thinks you are currently doing.",

  "content.model.output.action.iconTitle": "Action",
  "content.model.output.action.descriptionTitle": "Action",
  "content.model.output.action.descriptionBody": "The type of movement you want the machine learning tool to recognise e.g. ‘wave’ or ‘clap’.",

  "content.model.output.certainty.iconTitle": "Certainty",
  "content.model.output.certainty.descriptionTitle": "Certainty",
  "content.model.output.certainty.descriptionBody": "How confident the model is that you are currently doing each action.",

  "content.model.output.recognitionPoint": "Recognition Point:",

  "content.model.output.ledOutput.descriptionTitle": "LED output",
  "content.model.output.ledOutput.descriptionBody": "Here you can choose how the LEDs on your output micro:bit behaves when your model makes predictions. Try draw some patterns and see how they show on the output micro:bit when you move the input micro:bit.",

  "content.model.output.sound.iconTitle": "Sound",
  "content.model.output.sound.descriptionTitle": "Playback of sound",
  "content.model.output.sound.descriptionBody": "Here you can choose which sound you output micro:bit plays when the model makes a prediction. Be aware that the sound plays from your computer if you have a micro:bit version 1.",

  "content.model.output.pin.iconTitle": "Pin",
  "content.model.output.pin.descriptionTitle": "Pin outputs",
  "content.model.output.pin.descriptionBody": "Here you can select which pin will turn on when a gesture is predicted. Each pins are numbered according to micro:bit's official pin output diagram.",

  "content.model.output.popup.header": "Connect output micro:bit",
  "content.model.output.popup.body": "If you have not connected an output micro:bit, you cannot see the results of the changed made on this page. Use the connect button below",

  "content.model.addData": "Add data",

  "footer.connectButtonNotConnected": "Start",
  "footer.disconnectButton": "Disconnect",
  "footer.helpHeader": "Live graph",
  "footer.helpContent": "Once you have connected a micro:bit you can watch the accelerometer data for all three axes on this graph in real time. Try moving your connected micro:bit to see what the data looks like to your computer!",
  "footer.reconnecting": "Reconnecting. Please wait",

  "helpMenu.label": "Help",
  "helpMenu.helpAndSupport": "Help & support",
  "helpMenu.termsOfUse": "Terms of use",
  "helpMenu.cookies": "Cookies",
  "helpMenu.about": "About",

  "menu.data.helpHeading": "1. Add data",
  "menu.data.helpBody": "In order to train a model to recognize different movements, we need good examples of 'good behavior' that we can show the Trainer. Here you can create classes (types of gestures) and record examples for each class. There must be at least 2 classes with 3 examples each before the trainer can train a model.",
  "menu.data.examples": "examples",

  "menu.trainer.helpHeading": "2. Train model",
  "menu.trainer.helpBody": "The Trainer looks at the examples in each of the classes and tries to 'learn' how the different classes can be recognized by searching for patterns in the data. Here you can train a model to recognize different gestures.",
  "menu.trainer.notConnected1": "You have not connected a micro:bit.",
  "menu.trainer.notConnected2": " Please do so via the button below",
  "menu.trainer.notEnoughDataHeader1": "Status: You don't have enough data.",
  "menu.trainer.notEnoughDataInfoBody": "You need at least 3 data samples for 2 actions to train the model.",
  "menu.trainer.notEnoughDataInfo": "You have not collected enough data to train a model. You need at least 2 classes with 3 examples each. Please go to the Data page to collect more data",
  "menu.trainer.trainNewModelButton": "Train a new model",
  "menu.trainer.TrainingFinished": "Status: Your model is trained.",

  "menu.trainer.trainModelButton": "Train model",
  "menu.trainer.addDataButton": "Add data",
  "menu.trainer.addMoreDataButton": "Add more data",
  "menu.trainer.testModelButton": "Test model",

  "menu.model.helpHeading": "3. Test model",
  "menu.model.helpBody": "The model can be used in an interactive system. Here we use the trained model to predict gestures. You can connect another micro:bit and make it respond to the predicted gestures.",
  "menu.model.noModel": "No model",
  "menu.model.disconnect": "Disconnect output micro:bit",
  "menu.model.connectInputMicrobit": "Connect micro:bit",

  "connectMB.nextButton": "Next",
  "connectMB.backButton": "Back",

  "connectMB.radioStart.heading": "What you will need to get started:",
  "connectMB.radioStart.requirements1": "2 micro:bits",
  "connectMB.radioStart.requirements2": "Computer",
  "connectMB.radioStart.requirements3": "Micro USB cable",
  "connectMB.radioStart.requirements4": "Battery holder",
  "connectMB.radioStart.switchBluetooth": "Alternative method if you only have 1 micro:bit.",

  "connectMB.bluetoothStart.heading": "If you only have one micro:bit",
  "connectMB.bluetoothStart.subtitle": "You will need to have web Bluetooth enabled on your computer and in your web browser.",
  "connectMB.bluetoothStart.requirements1": "1 micro:bit",
  "connectMB.bluetoothStart.requirements2": "Computer",
  "connectMB.bluetoothStart.requirements3": "Micro USB cable",
  "connectMB.bluetoothStart.requirements4": "Battery holder",
  "connectMB.bluetoothStart.switchRadio": "Alternative method if you have 2 micro:bits.",

  "connectMB.wearingSetup.radioConnection.heading": "Is micro:bit 1 ready to wear?",
  "connectMB.wearingSetup.bluetooth.heading": "Is the micro:bit ready to wear?",
  "connectMB.wearingSetup.subtitle1": "Watch this video for instructions ",
  "connectMB.wearingSetup.subtitle2": " on how to attach your micro:bit and battery pack to your flexible micro:bit holder and wearable strap so that it is easy to wear on your wrist.",
  "connectMB.wearingSetup.requirements1": "micro:bit holder",
  "connectMB.wearingSetup.requirements2": "Wearable strap",

  "connectMB.connectCableMB1.heading": "Connect USB cable to micro:bit 1",
  "connectMB.connectCableMB1.subtitle": "Connect the micro:bit that is ready to wear (micro:bit 1) to this computer with a USB cable so that the machine learning tool program can be downloaded to it.",

  "connectMB.connectCableMB2.heading": "Connect cable to micro:bit 2",
  "connectMB.connectCableMB2.subtitle": "Connect a second micro:bit to this computer with a USB cable.",

  "connectMB.connectCable.heading": "Connect USB cable to micro:bit",
  "connectMB.connectCable.subtitle": "Connect the micro:bit to this computer with a USB cable so that the machine learning program can be downloaded to it.",

  "connectMB.connectCable.skip": "Skip: program already downloaded?",

  "connectMB.webPopup": "Select micro:bit",
  "connectMB.webPopup.instruction.heading": "In the next popup",
  "connectMB.webPopup.instruction1": "Choose your micro:bit",
  "connectMB.webPopup.instruction2": "Select 'Connect'",

  "connectMB.usbDownloadingMB1.header": "Downloading program to micro:bit 1",
  "connectMB.usbDownloadingMB2.header": "Downloading program to micro:bit 2",
  "connectMB.usbDownloading.header": "Downloading program to micro:bit",
  "connectMB.usbDownloading.subtitle": "Please wait. Downloading program to micro:bit.",

  "connectMB.connectBattery.heading": "Connect battery pack",
  "connectMB.connectBattery.subtitle": "Disconnect the micro:bit from the computer and connect the battery pack.",

  "connectMB.pattern.heading": "Copy pattern",
  "connectMB.pattern.subtitle": "Copy the pattern displayed on the micro:bit",

  "connectMB.bluetooth.heading": "Connect using Bluetooth",
  "connectMB.main.bluetooth.subtitle": "Connect using Bluetooth",
  "connectMB.bluetooth.cancelledConnection": "You cancelled the connection process. Try again, if you wish to proceed.",

  "connectMB.bluetooth.connecting": "Connecting...",
  "connectMB.bluetooth.invalidPattern": "The pattern you drew is invalid",

  "disconnectedWarning.input": "Your input micro:bit lost connection, do want to try again?",
  "disconnectedWarning.output": "Your output micro:bit lost connection, do want to try again?",
  "disconnectedWarning.reconnectButton.input": "Reconnect input",
  "disconnectedWarning.reconnectButton.output": "Reconnect output",

  "connectMB.output.header": "A micro:bit is already connected",

  "connectMB.usb.body1": "Connect your micro:bit using a USB-cable and click 'Next'",
  "connectMB.usb.body2": "Click 'Find USB unit' and select 'BBC micro:bit CMSIS-DAP' or 'DAPLink CMSIS-DAP' from the popup that appears",
  "connectMB.usb.button1": "Next",
  "connectMB.usb.button2": "Find USB unit",
  "connectMB.usb.done.body1": "Done - the program has been downloaded.",
  "connectMB.usb.done.body2": "You can now connect through bluetooth.",
  "connectMB.usb.done.body3": "If you have a battery for the micro:bit, you can now remove the usb-cable and use the battery instead.",
  "connectMB.usb.done.body4": "If you do not have a battery for the micro:bit, you can simply keep powering it through the usb cable.",

  "connectMB.usb.manual.header": "Transfer file to your micro:bit",
  "connectMB.usb.manual.manualDownload": "If the file did not automatically download press",
  "connectMB.usb.manual.manualDownloadLink": "here",
  "connectMB.usb.manual.done": "Done: Connect using bluetooth",

  "connectMB.usb.firmwareBroken.warning": "We detected issues with your micro:bit firmware",
  "connectMB.usb.firmwareBroken.content1": "The version of micro:bit and firmware have known issues, that prevent us from uploading the program to it.",
  "connectMB.usb.firmwareBroken.content2": "To proceed, you will have to transfer manually, or update your micro:bit's firmware.",
  "connectMB.usb.firmwareBroken.content3": "We recommend that you upgrade the firmware of your micro:bit to the latest version to fix this issue.",
  "connectMB.usb.firmwareBroken.content4": "A guide on how can be found on the ",
  "connectMB.usb.firmwareBroken.content4.website": "micro:bit foundation's website",
  "connectMB.usb.firmwareBroken.button.skip": "Skip and transfer manually",

  "connectMB.outputMB.same": "Use the same micro:bit",
  "connectMB.outputMB.different": "Connect another micro:bit",
  "connectMB.outputMB.sameButton": "Same",
  "connectMB.outputMB.otherButton": "Other",

  "languageDialog.title": "Language",

  "popup.compatibility.bluetooth.header": "Bluetooth incompatible browser!",
  "popup.compatibility.bluetooth.explain": "The browser you are currently using does not support bluetooth.",
  "popup.compatibility.bluetooth.advice": "Please update the browser or use another one from our supported browsers list below.",

  "connectMB.USBCompatibility.transferStep.step1": "Open the location to which the firmware was downloaded. Most commonly found in your download folder.",
  "connectMB.USBCompatibility.transferStep.step2": "Drag the file onto the micro:bit on your computer's file explorer.",
  "connectMB.USBCompatibility.transferStep.step3": "Once the file has finished transferring, the micro:bit can be connected using Bluetooth.",

  "compatibility.platform.notSupported": "The tool is not supported on your current platform.",
  "compatibility.platform.notSupported.joinDesktop": "Join us on desktop.",
  "compatibility.webgl.notSupported": "WebGL not available. Enable WebGL to see 3D data view.",

  "dialog.connection.lost.header": "Connection offline",
  "dialog.connection.lost.body": "Your internet connection is offline, some features may not work properly",

  "popup.outdatedmicrobit.header": "Your micro:bit firmware is outdated.",
  "popup.outdatedmicrobit.text": "We strongly recommend that you update it now, as some features may not work as expected.",
  "popup.outdatedmicrobit.text.mkcd": "Open the newest MakeCode template to use the updated extension.",
  "popup.outdatedmicrobit.button.later": "Later",
  "popup.outdatedmicrobit.button.update": "Update now",
  "popup.outdatedmicrobit.button.update.mkcd": "Open MakeCode",

  "settings.label": "Settings"
}
