import { act, renderHook } from "@testing-library/react";
import { useStore } from "./store";
import { Project } from "@microbit/makecode-embed/react";
import { makecodeIcons } from "./utils/icons";
import { GestureData } from "./model";

const projectHeader = {
  target: "microbit",
  targetVersion: "7.0.42",
  editor: "blocksprj",
  name: "Simple AI exercise timer",
  meta: {},
  pubId: "",
  pubCurrent: false,
  id: "f102d806-f767-45c6-3af3-35b3be9dbdcd",
  recentUse: 1728049865,
  modificationTime: 1728049865,
  path: "Simple-AI-exercise-timer",
  cloudCurrent: false,
  saveId: null,
  githubCurrent: false,
  _rev: "",
  isDeleted: false,
  cloudVersion: "",
  cloudLastSyncTime: 1,
};

const gestureData = [
  { name: "action1", ID: 1, icon: makecodeIcons.Heart, recordings: [] },
  { name: "action2", ID: 2, icon: makecodeIcons.House, recordings: [] },
] as GestureData[];

const sampleProject: Project = {
  header: projectHeader,
  text: {
    "README.md": "",
    "autogenerated.ts": "",
    "dataset.json": JSON.stringify({ data: gestureData }),
  },
};

describe("loadProject", () => {
  test("imports gesture data", () => {
    const { result } = renderHook(() => useStore());
    act(() => result.current.loadProject(sampleProject));

    expect(result.current.gestures.length).toEqual(gestureData.length);
    expect(result.current.model).toEqual(undefined);
  });
});
